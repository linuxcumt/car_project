// Generated by gencpp from file localization_msgs/GetSubmapRequest.msg
// DO NOT EDIT!


#ifndef LOCALIZATION_MSGS_MESSAGE_GETSUBMAPREQUEST_H
#define LOCALIZATION_MSGS_MESSAGE_GETSUBMAPREQUEST_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <geometry_msgs/Point.h>
#include <std_msgs/Int16.h>
#include <std_msgs/Int16.h>

namespace localization_msgs
{
template <class ContainerAllocator>
struct GetSubmapRequest_
{
  typedef GetSubmapRequest_<ContainerAllocator> Type;

  GetSubmapRequest_()
    : point()
    , width()
    , heigth()  {
    }
  GetSubmapRequest_(const ContainerAllocator& _alloc)
    : point(_alloc)
    , width(_alloc)
    , heigth(_alloc)  {
  (void)_alloc;
    }



   typedef  ::geometry_msgs::Point_<ContainerAllocator>  _point_type;
  _point_type point;

   typedef  ::std_msgs::Int16_<ContainerAllocator>  _width_type;
  _width_type width;

   typedef  ::std_msgs::Int16_<ContainerAllocator>  _heigth_type;
  _heigth_type heigth;




  typedef boost::shared_ptr< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> const> ConstPtr;

}; // struct GetSubmapRequest_

typedef ::localization_msgs::GetSubmapRequest_<std::allocator<void> > GetSubmapRequest;

typedef boost::shared_ptr< ::localization_msgs::GetSubmapRequest > GetSubmapRequestPtr;
typedef boost::shared_ptr< ::localization_msgs::GetSubmapRequest const> GetSubmapRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::localization_msgs::GetSubmapRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace localization_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'nav_msgs': ['/opt/ros/kinetic/share/nav_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/kinetic/share/sensor_msgs/cmake/../msg'], 'localization_msgs': ['/home/marc/catkin_ws/src/localization_msgs/msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "77b19bf23675d6282563c2a11dc02863";
  }

  static const char* value(const ::localization_msgs::GetSubmapRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x77b19bf23675d628ULL;
  static const uint64_t static_value2 = 0x2563c2a11dc02863ULL;
};

template<class ContainerAllocator>
struct DataType< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "localization_msgs/GetSubmapRequest";
  }

  static const char* value(const ::localization_msgs::GetSubmapRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "geometry_msgs/Point point\n\
std_msgs/Int16 width\n\
std_msgs/Int16 heigth\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
================================================================================\n\
MSG: std_msgs/Int16\n\
int16 data\n\
";
  }

  static const char* value(const ::localization_msgs::GetSubmapRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.point);
      stream.next(m.width);
      stream.next(m.heigth);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GetSubmapRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::localization_msgs::GetSubmapRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::localization_msgs::GetSubmapRequest_<ContainerAllocator>& v)
  {
    s << indent << "point: ";
    s << std::endl;
    Printer< ::geometry_msgs::Point_<ContainerAllocator> >::stream(s, indent + "  ", v.point);
    s << indent << "width: ";
    s << std::endl;
    Printer< ::std_msgs::Int16_<ContainerAllocator> >::stream(s, indent + "  ", v.width);
    s << indent << "heigth: ";
    s << std::endl;
    Printer< ::std_msgs::Int16_<ContainerAllocator> >::stream(s, indent + "  ", v.heigth);
  }
};

} // namespace message_operations
} // namespace ros

#endif // LOCALIZATION_MSGS_MESSAGE_GETSUBMAPREQUEST_H
